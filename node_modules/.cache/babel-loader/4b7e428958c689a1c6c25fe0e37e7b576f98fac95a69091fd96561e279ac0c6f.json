{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react-weather/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  function handleResponse(response) {\n    console.log(response.data);\n    setReady(true);\n    setWeatherData({\n      Temperature: response.data.main.temp,\n      Description: response.data.weather[0].description,\n      Humidity: response.data.main.humidity,\n      Wind: response.data.wind.speed\n    });\n  }\n  if (ready) {\n    let fakeData = {\n      temperature: 9,\n      city: \"New York\",\n      date: \"Saturday, 11:03\",\n      weather: \"Overcast cloud\",\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp-today\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: weatherData.Temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"units\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"active\",\n                  children: \"\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  children: \"\\xB0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"city\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: fakeData.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"date\",\n                children: fakeData.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"weather\",\n                children: weatherData.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fakeData.img,\n              className: \"fa-solid fa-sun\",\n              alt: weatherData.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    let city = \"New York\";\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n_s(Weather, \"v9yH+iKKluOUJc8Yn57gl9yHO/g=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","Weather","ready","setReady","weatherData","setWeatherData","handleResponse","response","console","log","data","Temperature","main","temp","Description","weather","description","Humidity","humidity","Wind","wind","speed","fakeData","temperature","city","date","img","apiKey","apiUrl","get","then"],"sources":["/Users/mac/Documents/react-weather/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather() {\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  function handleResponse(response) {\n    console.log(response.data);\n    setReady(true);\n    setWeatherData({\n      Temperature: response.data.main.temp,\n      Description: response.data.weather[0].description,\n      Humidity: response.data.main.humidity,\n      Wind: response.data.wind.speed,\n    });\n  }\n\n  if (ready) {\n    let fakeData = {\n      temperature: 9,\n      city: \"New York\",\n      date: \"Saturday, 11:03\",\n      weather: \"Overcast cloud\",\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\",\n    };\n    return (\n      <div className=\"card\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"temp-today\">\n                <strong>{weatherData.Temperature}</strong>\n                <span className=\"units\">\n                  <a href=\"/\" className=\"active\">\n                    °C\n                  </a>{\" \"}\n                  |<a href=\"/\">°F</a>\n                </span>\n              </div>\n              <h1 className=\"city\">\n                <strong>{fakeData.city}</strong>\n              </h1>\n              <div>\n                <h2 className=\"date\">{fakeData.date}</h2>\n                <h2 className=\"weather\">{weatherData.Description}</h2>\n              </div>\n            </div>\n            <div className=\"col\">\n              <img\n                src={fakeData.img}\n                className=\"fa-solid fa-sun\"\n                alt={weatherData.Description}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  } else {\n    let city = \"New York\";\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}