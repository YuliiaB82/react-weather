{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react-weather/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\"\n    });\n  }\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(WeatherInfo, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else {\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","WeatherInfo","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","temperature","data","main","temp","description","weather","humidity","wind","speed","name","date","Date","dt","img","apiKey","apiUrl","get","then"],"sources":["/Users/mac/Documents/react-weather/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\",\n    });\n  }\n\n  if (weatherData.ready) {\n    return <WeatherInfo data={weatherData} />;\n  } else {\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,eAAe,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE;EAAM,CAAC,CAAC;EAChE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAACM,WAAW,CAAC;EACnD,SAASC,cAAc,CAACC,QAAQ,EAAE;IAChCN,cAAc,CAAC;MACbC,KAAK,EAAE,IAAI;MACXM,WAAW,EAAED,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,IAAI;MACpCC,WAAW,EAAEL,QAAQ,CAACE,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACD,WAAW;MACjDE,QAAQ,EAAEP,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACI,QAAQ;MACrCC,IAAI,EAAER,QAAQ,CAACE,IAAI,CAACM,IAAI,CAACC,KAAK;MAC9Bb,IAAI,EAAEI,QAAQ,CAACE,IAAI,CAACQ,IAAI;MACxBC,IAAI,EAAE,IAAIC,IAAI,CAACZ,QAAQ,CAACE,IAAI,CAACW,EAAE,GAAG,IAAI,CAAC;MACvCC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;EAEA,IAAIrB,WAAW,CAACE,KAAK,EAAE;IACrB,oBAAO,QAAC,WAAW;MAAC,IAAI,EAAEF;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAC3C,CAAC,MAAM;IACL,IAAIsB,MAAM,GAAG,kCAAkC;IAC/C,IAAIC,MAAM,GAAI,qDAAoDpB,IAAK,UAASmB,MAAO,eAAc;IACrG1B,KAAK,CAAC4B,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACnB,cAAc,CAAC;EACxC;AACF;AAAC,GAvBuBR,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}