{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react-weather/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport FormatDate from \"./FormatDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\"\n    });\n  }\n  /*#__PURE__*/_jsxDEV(WeatherInfo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp-today\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: Math.round(weatherData.temperature)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"units\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"active\",\n                  children: \"\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 19\n                }, this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  children: \"\\xB0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"city\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: weatherData.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"date\",\n                children: /*#__PURE__*/_jsxDEV(FormatDate, {\n                  date: weatherData.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"weather\",\n                children: weatherData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: weatherData.img,\n              className: \"fa-solid fa-sun\",\n              alt: weatherData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n_s(Weather, \"tUtfTt5AWoQL1bRls7ZkwlkTJP4=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","FormatDate","WeatherInfo","Weather","props","weatherData","setWeatherData","ready","handleResponse","response","temperature","data","main","temp","description","weather","humidity","wind","speed","city","name","date","Date","dt","img","Math","round","apiKey","apiUrl","defaultCity","get","then"],"sources":["/Users/mac/Documents/react-weather/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport FormatDate from \"./FormatDate\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      img: \"http://openweathermap.org/img/wn/04n@2x.png\",\n    });\n  }\n  <WeatherInfo />;\n  if (weatherData.ready) {\n    return (\n      <div className=\"card\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"temp-today\">\n                <strong>{Math.round(weatherData.temperature)}</strong>\n                <span className=\"units\">\n                  <a href=\"/\" className=\"active\">\n                    °C\n                  </a>{\" \"}\n                  |<a href=\"/\">°F</a>\n                </span>\n              </div>\n              <h1 className=\"city\">\n                <strong>{weatherData.city}</strong>\n              </h1>\n              <div>\n                <h2 className=\"date\">\n                  <FormatDate date={weatherData.date} />\n                </h2>\n                <h2 className=\"weather\">{weatherData.description}</h2>\n              </div>\n            </div>\n            <div className=\"col\">\n              <img\n                src={weatherData.img}\n                className=\"fa-solid fa-sun\"\n                alt={weatherData.description}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  } else {\n    let apiKey = \"44144f3a5bac41c0c3eb91949dd3a0c9\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}